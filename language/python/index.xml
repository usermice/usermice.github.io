<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Python :: Hugo Relearn Theme</title>
    <link>https://usermice.github.io/language/python/</link>
    <description></description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>xxx@gmail.com (二哥)</managingEditor>
    <webMaster>xxx@gmail.com (二哥)</webMaster>
    <lastBuildDate>Wed, 12 Jun 2024 18:26:08 +0800</lastBuildDate>
    <atom:link href="https://usermice.github.io/language/python/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Language Python Django</title>
      <link>https://usermice.github.io/language/python/language_python_django/</link>
      <pubDate>Wed, 12 Jun 2024 18:26:08 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://usermice.github.io/language/python/language_python_django/</guid>
      <description>Django框架 $ python3 -m pip install Django $ django-admin startproject manager_qrcode 目录文件定义 主目录project name manage.</description>
    </item>
    <item>
      <title>Language Python</title>
      <link>https://usermice.github.io/language/python/language_python/</link>
      <pubDate>Wed, 12 Jun 2024 18:25:55 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://usermice.github.io/language/python/language_python/</guid>
      <description>Python 简介&#xA;Python是一个高层次的结合了解释性、编译性、互动性和面向对象的脚本语言。Python的设计具有很强的可读性，相比其他语言经常使用英文关键字，其他语言的一些标点符号，它具有比其他语言更有特色语法结构。&#xA;图解&#xA;IDE与快捷键使用&#xA;IDE 描述 Pycharm Anaconda Jupyter 查找、设置快捷键：File→Settings→Keymap</description>
    </item>
    <item>
      <title>Python Crawler</title>
      <link>https://usermice.github.io/language/python/language_python_crawler/</link>
      <pubDate>Wed, 12 Jun 2024 18:25:44 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://usermice.github.io/language/python/language_python_crawler/</guid>
      <description>爬虫脚本限制 通用性爬虫脚本需要考虑很多方面，包括不同类型的网站、数据格式、反爬机制等等。以下是一个简单的示例爬虫脚本，用于爬取豆瓣电影Top250的数据，并使用pandas库进行数据分析和可视化 这个脚本使用requests库和BeautifulSoup库来爬取豆瓣电影Top250的数据，然后将数据保存到CSV文件中。接着，使用pandas库将CSV文件读取为DataFrame，并进行数据分析和可视化。这个脚本只是一个简单的示例，如果要编写更复杂的爬虫脚本，需要仔细研究目标网站的结构和反爬机制 import requests from bs4 import BeautifulSoup import pandas as pd import matplotlib.</description>
    </item>
  </channel>
</rss>