<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Install_Kafka :: Hugo Relearn Theme</title>
    <link>https://erge.blog/systems/linux/message_queue/install_kafka/</link>
    <description>Kafka部署 Kafka简介 名称地址 描述 Kafka官网 安装及快速入门 php安装kafka扩展 Kafka集群搭建过程和简单使用 使用zookeeper保存所有集群主机消息内容 开发语言：Java/Scala，支持协议：仿AMQP Kafka是分布式发布-订阅消息系统,它最初由LinkedIn公司开发，之后成为Apache项目的一部分 Kafka是一个分布式的，可划分的，冗余备份的持久性的日志服务，它主要用于处理活跃的流式数据 事务处理不支持、支持集群、支持负载均衡、支持zookeeper动态扩容 所有消息自动保存两天时间 Kafka为了避免随机写入带来的时间消耗，采取顺序写的方式存储数据 Kafka采用零拷贝技术，让数据传输更加迅速 批量读书数据，减少磁盘IO操作，可以提升性能 为了保证历史消息继续可以被消费，提供一个offset指向，通过指向来负责消息读取顺序 网络传输采用数据压缩格式，所以传输更快，占用带宽越少 Kafka中数据可以设置副本，可以在出现问题之后依然保证该数据的有效性 Kafka整体采用显示分布式架构，producers、broker(Kafka)和consumers都可以有多个 producer、consumer实现Kafka注册的接口，数据从producer发送到broker，broker承担一个中间缓存和分发的作用，broker分发注册到系统中的consumer broker的作用类似于缓存，即活跃的数据和离线处理系统之间的缓存，客户端和服务端的通信，是基于简单，高性能，且与编程语言无关的TCP协议 Topic：特指Kafka处理的消息源feeds of messages的不同分类 Partition：代表分区，单核CPU一个分区，多个CPU可以有多个分区。Topic物理上的分组，一个topic可以分为多个partition，每个partition是一个有序的队列，partition中的每条消息都会被分配一个有序的id(offset) Message：消息，是通信的基本单位，每个producer可以向一个topic(主题)发布一些消息 Producers：消息和数据产生着，向Kafka的一个topic发布消息的过程叫做producers Consumers：消息和数据消费者，订阅topics并处理其发布消息的过程叫做consumers Broker：缓存代理，Kafka集群中的一台或者多台服务器统称为broker offset与消息访问 消费者通过offset的方式来取得消息数据，利用offset偏移改变消息读取位置，可以实现历史消息读取 为了避免频繁的大量小数据磁盘IO操作，Kafka采用批量读取模式处理消息 在高负载状态下，为防止无效率的字节复制，Kafka采用由Producer，broker和consumer共享的标准化二进制消息格式，这样数据库就可以在它们之间自由传输，无需转换，降低了字节复制成本开销 Kafka图形化页面 名称地址 描述 Kafka图形化工具Eagle Apache Kafka的用户界面 Kafdrop – Kafka Web UI Eagle For Apache Kafka以前称为Kafka Eagle Kafka单节点部署 Kafka安装 单机部署单实例 下载、解压Kafka安装包 $ wget -P /usr/local/src/ https://archive.</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>xxx@gmail.com (二哥)</managingEditor>
    <webMaster>xxx@gmail.com (二哥)</webMaster>
    <lastBuildDate></lastBuildDate>
    <atom:link href="https://erge.blog/systems/linux/message_queue/install_kafka/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>