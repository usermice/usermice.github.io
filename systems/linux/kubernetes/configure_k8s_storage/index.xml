<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Configure_K8s_Storage :: Hugo Relearn Theme</title>
    <link>https://usermice.github.io/systems/linux/kubernetes/configure_k8s_storage/</link>
    <description>Kubernetes数据存储 都知道容器的生命周期可能很短，会被频繁的创建和销毁。那么容器在销毁的时候，保存在容器中的数据也会被清除。这种结果对用户来说，在某些情况下是不乐意看到的。为了持久化保存容器中的数据，kubernetes引入了Volume的概念 Volume是Pod中能够被多个容器访问的共享目录，它被定义在Pod上，然后被一个Pod里面的多个容器挂载到具体的文件目录下，kubernetes通过Volume实现同一个Pod中不同容器之间的数据共享以及数据的持久化存储。Volume的生命周期不和Pod中的单个容器的生命周期有关，当容器终止或者重启的时候，Volume中的数据也不会丢失 kubernetes的Volume支持多种类型，比较常见的有下面的几个： 简单存储：EmptyDir、HostPath、NFS 高级存储：PV、PVC 配置存储：ConfigMap、Secret 简单存储 EmptyDir EmptyDir是最基础的Volume类型，一个EmptyDir就是Host上的一个空目录 EmptyDir是在Pod被分配到Node时创建的，它的初始内容为空，并且无须指定宿主机上对应的目录文件，因为kubernetes会自动分配一个目录，当Pod销毁时，EmptyDir中的数据也会被永久删除。 EmptyDir的用途如下 临时空间例如用于某些应用程序运行时所需的临时目录，且无须永久保留 多容器共享目录一个容器需要从另一个容器中获取数据的目录 接下来，通过一个容器之间的共享案例来使用描述一个EmptyDir 在一个Pod中准备两个容器nginx和busybox然后声明一个volume分别挂载到两个容器的目录中，然后nginx容器负责向volume中写日志，busybox中通过命令将日志内容读到控制台 Kubernetes Emptydir Template模板 apiVersion: v1 kind: Pod metadata: name: emptydir-volume-template # 定义名称 namespace: default spec: # 必选，Pod中容器的详细定义 containers: # 必选，Pod中容器列表 - name: nginx image: nginx:1.</description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>xxx@gmail.com (二哥)</managingEditor>
    <webMaster>xxx@gmail.com (二哥)</webMaster>
    <lastBuildDate></lastBuildDate>
    <atom:link href="https://usermice.github.io/systems/linux/kubernetes/configure_k8s_storage/index.xml" rel="self" type="application/rss+xml" />
  </channel>
</rss>