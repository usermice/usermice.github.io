<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Monitor :: Hugo Relearn Theme</title>
    <link>https://erge.blog/systems/linux/monitor/</link>
    <description></description>
    <generator>Hugo</generator>
    <language>en</language>
    <managingEditor>xxx@gmail.com (二哥)</managingEditor>
    <webMaster>xxx@gmail.com (二哥)</webMaster>
    <lastBuildDate>Fri, 21 Jun 2024 14:22:10 +0800</lastBuildDate>
    <atom:link href="https://erge.blog/systems/linux/monitor/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Install_Zabbix</title>
      <link>https://erge.blog/systems/linux/monitor/install_zabbix/</link>
      <pubDate>Fri, 21 Jun 2024 14:22:10 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/install_zabbix/</guid>
      <description>部署Zabbix监控系统 基础配置环境要求 名称地址 描述 Zabbix部署文档 下载安装Zabbix 部署Zabbix硬件要求 名称 平台 CPU/内存 数据库 受监控的主机 小型 CentOS 虚拟设备 MySQL InnoDB 100 中型 CentOS 2个CPU内核/2GB MySQL InnoDB 500 大型 RedHat Enterprise Linux 4个CPU内核/8GB RAID10 MySQL InnoDB或 PostgreSQL &gt;1000 超大型 RedHat Enterprise Linux 8个CPU内核/16GB RAID10 MySQL InnoDB或 PostgreSQL &gt;10000 部署Zabbix数据库版本要求 数据库 支持版本 推荐版本 备注 MySQL/Percona 5.</description>
    </item>
    <item>
      <title>Install_Prometheus</title>
      <link>https://erge.blog/systems/linux/monitor/install_prometheus/</link>
      <pubDate>Fri, 21 Jun 2024 14:16:56 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/install_prometheus/</guid>
      <description>Prometheus 名称地址 描述 Prometheus官网 prometheus-book Github-Prometheus Prometheus学习笔记 Prometheus介绍和使用 Prometheus+Grafana详解 Prometheus自定义监控部署 Prometheus CLIENT LIBRARIES 使用Prometheus+Grafana快速打造高逼格监控平台 概述 Prometheus是一个开源监控系统，它前身是SoundCloud的告警工具包。从2012年开始，许多公司和组织开始使用Prometheus。该项目的开发人员和用户社区非常活跃，越来越多的开发人员和用户参与到该项目中。目前它是一个独立的开源项目，且不依赖于任何公司。为了强调这点和明确该项目治理结构，Prometheus在2016年继Kurberntes之后，加入了Cloud Native Computing Foundation</description>
    </item>
    <item>
      <title>Install_Open_Falcon</title>
      <link>https://erge.blog/systems/linux/monitor/install_open_falcon/</link>
      <pubDate>Fri, 21 Jun 2024 14:10:19 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/install_open_falcon/</guid>
      <description>部署Open Falcon服务 Open-falcon架构 介绍 OpenFalcon是一款企业级、高可用、可扩展的开源监控解决方案。此项目最初由小米公司发起，小米运维团队从互联网公司的需求出发，根据多年的运维经验，结合SRE、SA、DEVS的使用经验和反馈，开发的一套面向互联网的企业级开源监控产品，最新版本为v2.0。目前有几十家公司不同程度使用OpenFalcon作为分布式系统的监控解决方案。&#xA;优点 采集器自动发现，支持falcon-agent、snmp、支持用户主动push数据、用户自定义插件 支持每个周期上亿次的数据采集、告警判定、历史数据存储和查询 高效的分区、支持监控策略模板、模板继承和覆盖、多种告警方式、支持告警回调 单节点能支持200万metric的上报、归档、存储 其存储采用rrdtool归档，秒级返回上百个metric一年的历史数据 多维度的数据展示，可由用户自定义Screen 通过各种插件目前支持Linux、Windows、Mysql、Redis、Memache、RabbitMQ和交换机监控 监控范围 OpenFalcon支持系统基础监控，第三方服务监控，JVM监控，业务应用监控 基础监控指Linux平台的系统指标监控，包括CPU、Load、内存、磁盘、IO、网络等，这些指标由OpenFalcon的agent节点直接支持，无需插件 JVM监控主要通过插件完成，插件通过JVM开放的JMX通信端口，获取到JVM参数指标，并推送到agent节点，再由agent发送到OpenFalcon 第三方服务监控指一些常见服务监控，包括MySQL、Redis、Nginx等，OpenFalcon官网提供了很多第三方服务的监控插件，也可以自己实现插件，定义采集指标。而采集到的指标，也是通过插件先发送给agent，再由agent发送到OpenFalcon 业务应用监控主要是监控企业自主开发的应用服务。由企业根据业务需要定义采集指标，自实现插件。将获取到的采集指标发送到agent，再由agent发送到OpenFalcon openfalcon数据流向 常见的OpenFalcon包含transfer、hbs、agent、judge、graph、API几个进程。但没有提供用户界面。用户界面的解决方案是OpenFalcon官方提供的Dashboard，由python编写的一个Web服务。Dashboard调用OpenFalcon的API节点REST，完成用户认证，查询历史等操作。 以下是各个节点的数据流向图，主数据流向是agent-&gt;transfer-&gt;judge/graph： 模块 组件 Agent: 是用于采集被部署机器上的监控数据，每隔60秒push给Transfer模块。agent与Transfer建立的是长连接（毕竟每分钟发送一次，短连接开销太大）。每台要被监控的机器都要部署该模块，它消耗的资源很小，不用太担心这一点。同时agent提供了一个http接口/v1/push用于接收用户手工push的一些数据，然后通过长连接迅速转发给Transfer，在实际使用中，我们对于某些自己项目接口的监控就是通过此方式来进行上传的</description>
    </item>
    <item>
      <title>Install_Nightingale</title>
      <link>https://erge.blog/systems/linux/monitor/install_nightingale/</link>
      <pubDate>Fri, 21 Jun 2024 14:06:54 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/install_nightingale/</guid>
      <description>Nightingale部署 Nightingale </description>
    </item>
    <item>
      <title>Install_Grafana</title>
      <link>https://erge.blog/systems/linux/monitor/install_grafana/</link>
      <pubDate>Fri, 21 Jun 2024 14:05:10 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/install_grafana/</guid>
      <description>部署Grafana 名称地址 描述 Download Grafana Download Grafana Docker安装 $ docker run -d --name=grafana -p 3000:3000 grafana/grafana-enterprise tar.</description>
    </item>
    <item>
      <title>Configure_Zabbix</title>
      <link>https://erge.blog/systems/linux/monitor/configure_zabbix/</link>
      <pubDate>Fri, 21 Jun 2024 14:00:23 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/configure_zabbix/</guid>
      <description>配置Zabbix Job Zabbix-Agen测试服务端、Zabbix监控配置 abbix_get：-s：客户端地址，-p：客户端端口，-k：键值 $ bin/zabbix_get -s &#34;zabbix_agent IP&#34; -k agent.</description>
    </item>
    <item>
      <title>Configure_Zabbix_Grafana</title>
      <link>https://erge.blog/systems/linux/monitor/configure_zabbix_grafana/</link>
      <pubDate>Fri, 21 Jun 2024 13:48:58 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/configure_zabbix_grafana/</guid>
      <description>配置Zabbix+Grafana监控展示 名称地址 描述 Zabbix+Grafana Grafana Dashboards Grafana之telegram报警配置 ConsulManager实现Prometheus监控目标 Blackbox Exporter Dashboard 2022/04/12 1 Node Exporter Dashboard 22/04/13 ConsulManager自动同步版 配置Grafana中文界面 $ cat &gt;/opt/apps/grafana/conf/defaults.</description>
    </item>
    <item>
      <title>Configure_Prometheus</title>
      <link>https://erge.blog/systems/linux/monitor/configure_prometheus/</link>
      <pubDate>Fri, 21 Jun 2024 00:07:13 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/configure_prometheus/</guid>
      <description>配置Prometheus Prometheus的yaml文件编写 $ cat &gt;/opt/prometheus/prometheus.yaml&lt;&lt;-EOF # my global config global: # 全局配置 scrape_interval: 15s # 默认情况下，每15s拉取一次目标采样点数据 evaluation_interval: 15s # Evaluate rules every 15 seconds.</description>
    </item>
    <item>
      <title>Configure_Open_Falcon</title>
      <link>https://erge.blog/systems/linux/monitor/configure_open_falcon/</link>
      <pubDate>Thu, 20 Jun 2024 23:52:32 +0800</pubDate><author>xxx@gmail.com (二哥)</author>
      <guid>https://erge.blog/systems/linux/monitor/configure_open_falcon/</guid>
      <description>Open-falcon配置 查看监控数据 Linux下smokeping网络监控环境部署记录&#xA;agent只要部署到机器上，并且配置好了heartbeat和transfer就自动采集数据了，我们就可以去dashboard上面搜索监控数据查看了。dashboard是个web&gt; 项目，浏览器访问之。左侧输入endpoint搜索，endpoint是什么？应该用什么搜索？对于agent采集的数据endpoint都是机器名，去目标机器上执行hostname&gt; ，看到的输出就是endpoint，拿着hostname去搜索。&#xA;选中前面的复选框，点击“查看counter列表”，可以列出隶属于这个endpoint的counter假如我们要查看cpu.busy，在counter搜索框中输入cpu&gt; 并回车。看到cpu.busy了吧，点击，会看到一个新页面，图表中就是这个机器的cpu.busy&gt; 的近一小时数据了，想看更长时间的？右上角有个小三角，展开菜单，可以选择更长的时间跨度&#xA;配置报警策略 配置报警接收人</description>
    </item>
  </channel>
</rss>